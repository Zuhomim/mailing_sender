# Generated by Django 5.0.2 on 2024-02-11 19:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mailing', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='logs',
            options={'verbose_name': 'лог', 'verbose_name_plural': 'логи'},
        ),
        migrations.AlterModelOptions(
            name='mailing',
            options={'verbose_name': 'Рассылка', 'verbose_name_plural': 'Рассылки'},
        ),
        migrations.AlterModelOptions(
            name='message',
            options={'verbose_name': 'Сообщение', 'verbose_name_plural': 'Сообщения'},
        ),
        migrations.RemoveField(
            model_name='message',
            name='mailing',
        ),
        migrations.AddField(
            model_name='mailing',
            name='message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mailing.message', verbose_name='Сообщение'),
        ),
        migrations.AddField(
            model_name='mailing',
            name='user',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='logs',
            name='status',
            field=models.CharField(max_length=60, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='mailing',
            name='periodicity',
            field=models.CharField(choices=[('daily', 'Ежедневно'), ('weekly', 'Еженедельно'), ('monthly', 'Ежемесячно')], max_length=30, verbose_name='Периодичность'),
        ),
        migrations.AlterField(
            model_name='mailing',
            name='status',
            field=models.CharField(choices=[('created', 'Создана'), ('started', 'Запущена'), ('completed', 'Завершена')], max_length=30, verbose_name='Статус'),
        ),
        migrations.AddConstraint(
            model_name='logs',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('response__isnull', False), ('status', False)), ('status', True), _connector='OR'), name='not_empty_response_on_failure'),
        ),
    ]
